//bnet things
let passport = require('passport');
let BnetStrategy = require('passport-bnet').Strategy;
let BNET_ID = process.env.BNET_ID;
let BNET_SECRET = process.env.BNET_SECRET;
let express = require('express');
var cookieParser = require('cookie-parser');
var session = require('express-session');
let app = express();
let token;

passport.serializeUser(function (user, done) {
    done(null, user);
});

passport.deserializeUser(function (obj, done) {
    done(null, obj);
});

//Use the BnetStrategy within Passport
passport.use(new BnetStrategy({
    clientID: '7612ac0d3415424299217980dc49dacb',
    clientSecret: 'yRmNduMSbERsvlBePPLKPgm1IsAdHrcY',
    callbackURL: "https://localhost:3000/auth/bnet/callback",
    scope: "wow.profile sc2.profile"
}, function (accessToken, refreshToken, profile, done) {
    process.nextTick(function () {
        return done(null, profile);
      });
}));

// configure Express
app.use(cookieParser());
app.use(session({
    secret: 'blizzard',
    saveUninitialized: true,
    resave: true
}));

// Initialize Passport!  Also use passport.session() middleware, to support
// persistent login sessions (recommended).
app.use(passport.initialize());
app.use(passport.session());

app.get('/auth/bnet',
    passport.authenticate('bnet'));

app.get('/auth/bnet/callback',
    passport.authenticate('bnet', { failureRedirect: '/' }),
    function (req, res) {
        res.redirect('/');
    });

app.get('/', function (req, res) {
    if (req.isAuthenticated()) {
        var output = '<h1>Express OAuth Test</h1>' + req.user.id + '<br>';
        console.log('I am here')
        if (req.user.battletag) {
            console.log(req.user.battletag)
            output += req.user.battletag + '<br>';
        }
        output += '<a href="/logout">Logout</a>';
        res.send(output);
    } else {
        res.send('<h1>Express OAuth Test</h1>' +
            '<a href="/auth/github">Login with Github</a><br>' +
            '<a href="/auth/bnet">Login with Bnet</a>');
    }
});

var server = app.listen(3000, function () {
    console.log('Listening on port %d', server.address().port);
});